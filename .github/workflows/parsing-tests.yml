name: Parsing Tests

on:
  workflow_call:

env:
  TESTS_TO_SKIP: ibex swerv synthesis opentitan serv serv-minimal hello-uvm assignment-pattern Forever BitsCallOnType OneClass
    Continue AnonymousUnion ParameterUnpackedArray VoidFunction2Returns PatternStruct ImportedFunctionCallInModuleAndSubmodule
    VoidFunctionWithoutReturn cmake PutC OneThis CastInFunctionInGenBlock PatternType FunctionOutputArgument GetC ForkJoinTypes
    EnumFirstInInitial ImportFunction DpiChandle Disable EnumFirst TypedefOnFileLevel UnsizedConstantsParameterParsing Fork
    PatternInFunction TypedefVariableDimensions ParameterUnpackedLogicArray SelectFromUnpackedInFunction PatternReplication
    VoidFunction MultiplePrints BitSelectPartSelectInFunction ImportPackageWithFunction ParameterPackedArray StringAssignment
    SystemFunctions ParameterDoubleUnderscoreInSvFrontend OutputSizeWithParameterOfInstanceInitializedByStructMember
    ParameterOfSizeOfParametrizedPort ParameterOfSizeOfParametrizedPortInSubmodule ParameterOfSizeOfPort StringAssignConcatenation
    StringLocalParamInitByConcatenation StringWithBackslash FunctionWithOverriddenParameter RealValue BitsCallOnParametetrizedTypeFromPackage
    AssignToUnpackedUnionFieldAndReadOtherField IndexedPartSelectInFor NestedPatternPassedAsPort StreamOp
    NestedStructArrayParameterInitializedByPatternPassedAsPort PartSelectInFor SelfSelectsInBitSelectAfterBitSelect
    StructArrayParameterInitializedByPatternPassedAsPort SelectGivenBySelectOnParameterInFunction StreamOperatorBitReverseFunction

jobs:
  #  tests-read-uhdm:
  #    name: Surelog
  #    runs-on: [self-hosted, Linux, X64]
  #    container: ubuntu:jammy
  #    strategy:
  #      fail-fast: false
  #    env:
  #      CC: gcc-9
  #      CXX: g++-9
  #      GIT_HTTP_LOW_SPEED_LIMIT: 1
  #      GIT_HTTP_LOW_SPEED_TIME: 600
  #      DEBIAN_FRONTEND: noninteractive
  #      GHA_MACHINE_TYPE: "n2-standard-2"
  #      PARSER: surelog
  #
  #    steps:
  #      - uses: actions/checkout@v3
  #        with:
  #          submodules: recursive
  #          fetch-depth: 1
  #
  #      - name: Set up common Ubuntu configuration
  #        run: ./.github/scripts/set-up-common-ubuntu-configuration.sh
  #
  #      - name: Install dependencies
  #        run: |
  #          apt-get update -qq
  #          apt install -y software-properties-common
  #          add-apt-repository ppa:ubuntu-toolchain-r/test
  #          apt-get update -qq
  #          apt install -y gcc-9 g++-9 build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev
  #          update-alternatives --install /usr/bin/python python /usr/bin/python3 1
  #
  #      - name: Download binaries
  #        uses: actions/download-artifact@v2
  #        with:
  #          name: binaries
  #
  #      # See https://github.com/actions/upload-artifact/issues/38
  #      - name: Extract
  #        run: tar -xf binaries.tar
  #
  #      - name: Build & Test (yosys)
  #        run: |
  #          ./.github/scripts/run_group_test.sh
  #
  #        env:
  #          TARGET: uhdm/yosys/test-ast
  #
  #      - name: Rename test results
  #        if: ${{ always() }}
  #        run: |
  #          mv test-results/test-results.passed test-results/test-results-uhdm.passed || true
  #          mv test-results/test-results.failed test-results/test-results-uhdm.failed || true
  #
  #      - uses: actions/upload-artifact@v3
  #        if: ${{ always() }}
  #        with:
  #          name: test-results
  #          path: test-results
  #
  #      - uses: actions/upload-artifact@v2
  #        if: ${{ always() }}
  #        with:
  #          name: tests-vcddiff-artifacts
  #          path: UHDM-integration-tests/artifacts
  #
  #      - name: Upload load graphs
  #        if: ${{ always() }}
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: plots
  #          path: |
  #            **/plot_*.svg

  tests-read-systemverilog:
    name: SystemVerilog Plugin
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      CC: gcc-9
      CXX: g++-9
      GIT_HTTP_LOW_SPEED_LIMIT: 1
      GIT_HTTP_LOW_SPEED_TIME: 600
      DEBIAN_FRONTEND: noninteractive
      GHA_MACHINE_TYPE: "n2-standard-2"
      PARSER: yosys-plugin

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install -y software-properties-common
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update -qq
          sudo apt install -y gcc-9 g++-9 build-essential cmake tclsh ant default-jre swig google-perftools python3 python3-dev uuid uuid-dev tcl-dev flex libfl-dev
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries

      # See https://github.com/actions/upload-artifact/issues/38
      - name: Extract
        run: tar -xf binaries.tar

      - name: Build & Test (yosys)
        run: |
          ./.github/scripts/run_group_test.sh

        env:
          TARGET: uhdm/yosys/test-ast

      - name: Rename test results
        if: ${{ always() }}
        run: |
          mv test-results/test-results.passed test-results/test-results-systemverilog.passed || true
          mv test-results/test-results.failed test-results/test-results-systemverilog.failed || true

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-results
          path: test-results

      - name: Upload load graphs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            **/plot_*.svg

