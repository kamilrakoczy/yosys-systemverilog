name: 'main'
run-name: >
  ${{ github.event_name == 'workflow_dispatch' &&
        format('{0}{1}{2}',
          github.ref_name,
          (github.event.inputs.plugins_branch && format( '; plugins: {0}', github.event.inputs.plugins_branch ) || ''),
          (github.event.inputs.uhdm_tests_branch && format( '; uhdm_tests: {0}', github.event.inputs.uhdm_tests_branch ) || '')
        )
      || ''
  }}


on:
  workflow_dispatch:
    inputs:
      plugins_branch:
        description: 'yosys-f4pga-plugins branch or URL'
        required: false
        default: ''
      uhdm_tests_branch:
        description: 'UHDM-integration-tests branch or URL'
        required: false
        default: ''
  push:
  pull_request:

env:
  GHA_CUSTOM_LINE_PREFIX: "â–Œ"

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    env:
      CC: gcc-9
      CXX: g++-9
      DEBIAN_FRONTEND: noninteractive
      PLUGIN_ASAN: 1
      GHA_MACHINE_TYPE: "n2-highmem-8"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 1

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install -y software-properties-common
          sudo apt install -y build-essential cmake tclsh ant default-jre swig google-perftools libgoogle-perftools-dev python3 python3-dev python3-pip uuid uuid-dev tcl-dev flex libfl-dev git pkg-config libreadline-dev bison libffi-dev wget ccache libunwind-dev
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          sudo update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
          sudo pip install orderedmultidict
          sudo pip install --upgrade pip
          sudo pip install cmake

      - name: Create Cache Timestamp
        id: cache_timestamp
        uses: nanzm/get-time-action@v1.1
        with:
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: Checkout submodules
        run: |
          git submodule update --depth 1 --init --recursive \
              Surelog \
              yosys \
              yosys-f4pga-plugins \
              ;

      - name: Override submodule revisions (if requested)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.plugins_branch != ''}}
        env:
          PLUGINS_BRANCH_SPEC: ${{github.event.inputs.plugins_branch}}
        run: |
          source ./.github/scripts/submodule-revision-override.inc.bash

          override-submodule-if-requested \
              'yosys-f4pga-plugins' \
              "$yosys_f4pga_plugins_default_gh_user" "$yosys_f4pga_plugins_default_gh_repo" \
              "$PLUGINS_BRANCH_SPEC"

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/ccache
          key: cache_${{ steps.cache_timestamp.outputs.time }}
          restore-keys: cache_

      - name: Build binaries
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          ./build_binaries.sh
          # By default actions/upload-artifact@v2 do not preserve file permissions
          # tar directory to workaround this issue
          # See https://github.com/actions/upload-artifact/issues/38
          tar -cvf binaries.tar image

      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: |
            binaries.tar

      - name: Upload load graphs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            **/plot_*.svg

  tests-parsing:
    name: Parsing Tests
    uses: ./.github/workflows/parsing-tests.yml
    secrets:
      SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
    permissions:
      pull-requests: write
    with:
      uhdm_tests_branch: ${{github.event.inputs.uhdm_tests_branch}}
      plugins_branch: ${{github.event.inputs.plugins_branch}}
    needs: build-binaries
